抽象工厂模式通常适用于以下场景：
  1、当需要创建的对象是一系列相互关联或相互依赖的产品族，如电器中的电视机、洗衣机、空调等
  2、系统中有多个产品族，但每次只使用其中的某一族产品
  3、系统中提供了产品的类库，且所有的产品的接口相同，客户端不依赖产品实例的创建细节和内部结构



  抽象工厂模式的扩展
  缺点---->>>> 抽象工厂模式的扩展有一定的“开闭原则”倾斜性

  1、当增加一个新的产品族时，只需要增加一个新的具体工厂，不需要再更原接口代码
  2、当产品族中需要增加一个新种类的产品时，则所有的工厂类都需要进行修改，不满足开闭原则。

  当系统中只存在一个等级结构的产品时，抽象工厂将退化到工厂方法模式


